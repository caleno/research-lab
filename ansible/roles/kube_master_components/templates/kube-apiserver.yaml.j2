apiVersion: v1
kind: Pod
metadata:
  name: kube-apiserver
  namespace: kube-system
spec:
  hostNetwork: true
  containers:
  - name: kube-apiserver
    image: gcr.io/google_containers/hyperkube-amd64:v{{ k8s_ver }}
    resources:
      requests:
        cpu: {{ apiserver_cpu }}
        memory: {{ apiserver_memory }}
    command:
    - /hyperkube
    - apiserver
    - --bind-address=0.0.0.0
    - --etcd-servers={% set comma = joiner(',') %}
{%- for host in groups['masters'] -%}
{%- if cluster_name == hostvars[host]['cluster_name'] -%}
{{ comma() }}https://{{ host }}.node.cluster.local:2379
{%- endif -%}
{%- endfor %}

    - --etcd-cafile=/etc/ssl/etcd/ca.pem
    - --etcd-certfile=/etc/ssl/etcd/node.pem
    - --etcd-keyfile=/etc/ssl/etcd/node-key.pem
    - --etcd-quorum-read=true
    - --allow-privileged=true
    - --service-cluster-ip-range={{ service_ip_range }}
    - --secure-port=8443
    - --admission-control=NamespaceLifecycle,DenyEscalatingExec,LimitRanger,ServiceAccount,ResourceQuota,PodSecurityPolicy,AlwaysPullImages,NodeRestriction,OwnerReferencesPermissionEnforcement,DefaultTolerationSeconds,Priority
    - --tls-cert-file=/etc/kubernetes/ssl/node.pem
    - --tls-private-key-file=/etc/kubernetes/ssl/node-key.pem
    - --client-ca-file=/etc/kubernetes/ssl/ca.pem
    - --service-account-key-file=/etc/kubernetes/service-key.pem
    - --service-account-lookup=true
    - --runtime-config=extensions/v1beta1=true,extensions/v1beta1/networkpolicies=true,rbac.authorization.k8s.io/v1beta1=true,extensions/v1beta1/podsecuritypolicy=true,scheduling.k8s.io/v1alpha1=true
    - --feature-gates=Accelerators=true,ExperimentalCriticalPodAnnotation=true,TaintBasedEvictions=true,MountPropagation=true,DevicePlugins=True,PodPriority=True
    - --authorization-mode=RBAC
    - --service-node-port-range=30-32767
    - --storage-backend=etcd3
    - --apiserver-count={{ apiserver_count }}
    - --anonymous-auth=false
    - --kubelet-certificate-authority=/etc/ssl/kubelet/ca.pem
    - --kubelet-client-certificate=/etc/ssl/kubelet/node-client.pem
    - --kubelet-client-key=/etc/ssl/kubelet/node-client-key.pem
    - --audit-log-path=/var/log/apiserver/audit.log
    - --audit-log-maxage=7
    - --audit-log-maxbackup=5
    - --audit-log-format=json
    - --audit-policy-file=/etc/kubernetes/audit-policy.yaml
    - --oidc-issuer-url={{oidc_issuer_url}}
    - --oidc-client-id={{oidc_client_id}}
    - --oidc-groups-claim={{oidc_groups_claim}}
    volumeMounts:
    - mountPath: /etc/kubernetes/ssl
      name: ssl-certs-kubernetes
      readOnly: true
    - mountPath: /etc/ssl/certs
      name: ssl-certs-host
      readOnly: true
    - mountPath: /etc/ssl/etcd
      name: ssl-certs-etcd
      readOnly: true
    - mountPath: /etc/kubernetes/service-key.pem
      name: kubernetes-service-key
      readOnly: true
    - mountPath: /etc/hosts
      name: hosts
      readOnly: true
    - mountPath: /etc/ssl/kubelet
      name: ssl-certs-kubelet
      readOnly: true
    - mountPath: /var/log/apiserver
      name: apiserver-auditlog
    - mountPath: /etc/kubernetes/audit-policy.yaml
      name: apiserver-audit-policy
  volumes:
  - hostPath:
      path: /etc/kubernetes/ssl
    name: ssl-certs-kubernetes
  - hostPath:
      path: /usr/share/ca-certificates
    name: ssl-certs-host
  - hostPath:
      path: /etc/ssl/etcd
    name: ssl-certs-etcd
  - hostPath:
      path: /etc/kubernetes/service-key.pem
    name: kubernetes-service-key
  - hostPath:
      path: /etc/kubernetes/audit-policy.yaml
    name: apiserver-audit-policy
  - hostPath:
      path: /etc/hosts
    name: hosts
  - hostPath:
      path: /etc/ssl/kubelet
    name: ssl-certs-kubelet
  - hostPath:
      path: /var/log/apiserver
    name: apiserver-auditlog
